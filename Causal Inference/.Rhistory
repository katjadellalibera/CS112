library(foreign)
foo<- read.dta("C:\\Users\\rbc15\\Desktop\\Minerva\\second year\\Second Semester\\CS112\\jtpa.dta")
women<- foo%>%
filter(sex=0)
men<- foo%>%
filter(sex=1)
library(dplyr)
women<- foo%>%
filter(sex=0)
men<- foo%>%
filter(sex=1)
women<- foo%>%
filter(sex=0)
men<- foo%>%
filter(sex=1)
women<- foo%>%
filter(sex==0)
men<- foo%>%
filter(sex==1)
plot(foo$assignmt~foo$prevearn)
library(ggplot2)
ggplot(foo, aes(x=assignmt, y=prevearn))
+geom_point()
+ geom_smooth(method="lm")
ggplot(foo, aes(x=assignmt, y=prevearn))
+geom_point()
+geom_smooth(method="lm")
ggplot(foo, aes(x=assignmt, y=prevearn)) +
geom_point()+
geom_smooth(method="lm")
ggplot(foo, aes(x=assignmt, y=age)) +
geom_point()+
geom_smooth(method="lm")
ggplot(foo, aes(x=assignmt, y=married)) +
geom_point()+
geom_smooth(method="lm")
#women
ggplot(women, aes(x=assignmt, y=prevearn)) +
geom_point()+
geom_smooth(method="lm")
ggplot(women), aes(x=assignmt, y=age)) +
geom_point()+
geom_smooth(method="lm")
ggplot(women, aes(x=assignmt, y=married)) +
geom_point()+
geom_smooth(method="lm")
#men
ggplot(men, aes(x=assignmt, y=prevearn)) +
geom_point()+
geom_smooth(method="lm")
ggplot(men, aes(x=assignmt, y=age)) +
geom_point()+
geom_smooth(method="lm")
ggplot(men, aes(x=assignmt, y=married)) +
geom_point()+
geom_smooth(method="lm")
lm1<- lm(women$assignmt~women$earnings)
lm2<- lm(men$assignmt~men$earnings)
summary(lm1)
summary(lm2)
lm1<- lm(women$earnings~women$assignmt)
lm2<- lm(men$earnings~men$assignmt)
summary(lm1)
summary(lm2)
#4#
#women
women%>%filter(assignmt==1)%filter(training==1)/women%>%filter(assignmt==1)
#4#
#women
women%>%filter(assignmt==1)%>%filter(training==1)/women%>%filter(assignmt==1)
#4#
#women
length(women%>%filter(assignmt==1)%>%filter(training==1))/length(women%>%filter(assignmt==1))
women%>%filter(assignmt==1)
length(women%>%filter(assignmt==1))
#4#
#women
nrow(women%>%filter(assignmt==1)%>%filter(training==1))/nrow(women%>%filter(assignmt==1))
nrow(women%>%filter(assignmt==0)%>%filter(training==1))/nrow(women%>%filter(assignmt==0))
nrow(men%>%filter(assignmt==1)%>%filter(training==1))/nrow(men%>%filter(assignmt==1))
nrow(men%>%filter(assignmt==0)%>%filter(training==1))/nrow(men%>%filter(assignmt==0))
set.seed(123)
fit1 <- glm(treat ~  wartype + logcost + wardur + factnum + factnum2 + trnsfcap + exp + decade + untype4 +
I(wartype^2) + I(logcost^2) + I(wardur^2) + I(wardur*untype4) + I(factnum*wardur),
family = binomial,
data = foo)
mout1 <- Match(Y = foo$pbs2l, X = fit1$fitted, Tr = foo$treat)
mb2l.2 <- MatchBalance(treat ~  wartype + logcost + wardur + factnum + factnum2 + trnsfcap  + exp + decade + untype4 +
I(wartype^2) + I(logcost^2) + I(wardur^2) + I(wardur*untype4) + I(factnum*wardur),
match.out = mout1,
data = foo,
nboots = 500)
summary(mout1)
foo <- read.csv("https://course-resources.minerva.kgi.edu/uploaded_files/mke/00086677-3767/peace.csv")
# Original
Tr <- rep(0, length(foo$uncint))
Tr[which(foo$uncint != 0 & foo$uncint != 1)] <- 1
# translated to the structure of the actual data
Tr <- rep(0, length(foo$uncint))
Tr[which(foo$uncint != "None")] <- 1
#add the variable to the dataset
foo$treat <- Tr
### 4 ###
## pre-processing ##
foo <- data.frame("treat" = foo$treat,
"wartype" = foo$wartype,
"logcost" = foo$logcost,
"wardur" = foo$wardur,
"factnum" = foo$factnum,
"factnum2" = foo$factnum2,
"trnsfcap" = foo$trnsfcap,
"exp" = foo$exp,
"decade" = foo$decade,
"treaty" = foo$treaty,
"untype4" = foo$untype4,
"pbs2l" = foo$pbs2l,
"pbs5l" = foo$pbs5l)
# getting rid of NAs
foo <- foo[c(-4,-16,-19,-47,-84,-93,-98),]
# code pbs2l and pbs5l as 1 and 0 instead of "Success" and "Failure"
effect1 <- rep(0, length(foo$treat))
effect1[which(foo$pbs2l != "Success")] <- 1
foo$pbs2l <- effect1
# since pbs5l includes NAs, we need to make a copy of the dataset without the NAs
effect2 <- rep(0, length(foo$treat))
effect2[which(foo$pbs5l != "Success")] <- 1
foo$pbs5l <- effect2
set.seed(123)
fit1 <- glm(treat ~  wartype + logcost + wardur + factnum + factnum2 + trnsfcap + exp + decade + untype4 +
I(wartype^2) + I(logcost^2) + I(wardur^2) + I(wardur*untype4) + I(factnum*wardur),
family = binomial,
data = foo)
mout1 <- Match(Y = foo$pbs2l, X = fit1$fitted, Tr = foo$treat)
mb2l.2 <- MatchBalance(treat ~  wartype + logcost + wardur + factnum + factnum2 + trnsfcap  + exp + decade + untype4 +
I(wartype^2) + I(logcost^2) + I(wardur^2) + I(wardur*untype4) + I(factnum*wardur),
match.out = mout1,
data = foo,
nboots = 500)
summary(mout1)
### 1 ###
## a ##
library(Matching)
set.seed(123)
fit1 <- glm(treat ~  wartype + logcost + wardur + factnum + factnum2 + trnsfcap + exp + decade + untype4 +
I(wartype^2) + I(logcost^2) + I(wardur^2) + I(wardur*untype4) + I(factnum*wardur),
family = binomial,
data = foo)
mout1 <- Match(Y = foo$pbs2l, X = fit1$fitted, Tr = foo$treat)
mb2l.2 <- MatchBalance(treat ~  wartype + logcost + wardur + factnum + factnum2 + trnsfcap  + exp + decade + untype4 +
I(wartype^2) + I(logcost^2) + I(wardur^2) + I(wardur*untype4) + I(factnum*wardur),
match.out = mout1,
data = foo,
nboots = 500)
summary(mout1)
library(rgenoud)
# 2 years lenient peacebuilding success
X2 <- cbind(foo$wartype, foo$logcost, foo$wardur, foo$factnum, foo$factnum2, foo$trnsfcap, foo$exp, foo$decade)
Y2 <- foo$pbs2l
genout2l <- GenMatch(Tr = foo$treat, X = X2, pop.size = 300, max.generations = 30, wait.generations = 1)
mout2l <- Match(Y = Y2, Tr = foo$treat, X = X2, Weight.matrix = genout2l)
summary(mout2l)
mb2l.4 <- MatchBalance(treat ~  wartype + logcost + wardur + factnum + factnum2 + trnsfcap + exp + decade,
match.out = mout2l,
data = foo)
mout2lba <- Match(Y = Y2, Tr = foo$treat, X = X2, Weight.matrix = genout2l, BiasAdjust = TRUE)
summary(mout2lba)
mb2l.4ba <- MatchBalance(treat ~  wartype + logcost + wardur + factnum + factnum2 + trnsfcap + exp + decade,
match.out = mout2lba,
data = foo)
